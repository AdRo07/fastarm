fastarm

This toolkit contains a set of fast memcpy variants for ARM platforms.
They uses the standard register file, VFP or NEON registers are not
used.

Two basic families are provided: a simpler one that is optimized for
common cases and does possible unaligned memory access for small sizes;
and a more complicated one that always uses aligned memory access and
can be configured not to overfetch being the source region.

To compile the benchmark program, run 'make'. This will compile in a
plethora of variants with different preload strategies, block sizes,
alignment etc.

To compile a memcpy replacement library, set PLATFORM to one of the
following values in the Makefile:

    SUNXI    Allwinner platform (tested on A10).
    RPI      Raspberry Pi

and run:

    sudo make install_memcpy_replacement

The replacement memcpy shared library will be installed into
/usr/lib/arm-linux-gnueabihf/ as libfastarm.so.

To enable the use of the replacement memcpy in applications, create or edit
the file /etc/ld.so.preload so that it contains the line:

    /usr/lib/arm-linux-gnueabihf/libfastarm.so

On the RPi platform, references to libcofi_rpi.so should be commented out
or deleted. The new memcpy should now be activated for newly launched
programs. To be sure, reboot or run:

    sudo ldconfig

To revert to the default optimized memcpy on the RPi platform,
edit /etc/ld.so.preload so that it contains the line:

    /usr/lib/arm-linux-gnueabihf/libcofi_rpi.so

instead of the one using libfastarm.so.
